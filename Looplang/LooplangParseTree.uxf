<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>270</x><y>0</y><w>240</w><h>270</h></coordinates><panel_attributes>Looplang
-
- sym : SymbolTable
- parser: Looplang
--
+ LooplangParseTree(parser : Looplang)
+ ParseNode : &lt;&lt;interface&gt;&gt;
+ StatementNode : &lt;&lt;abstract class&gt;&gt;
+ StatementListNode : &lt;&lt;class&gt;
+ ProgramNode : &lt;&lt;class&gt;
+ ArrayDeclNode : &lt;&lt;class&gt;&gt;
+ AssignNode : &lt;&lt;class&gt;&gt;
+ WhileNode : &lt;&lt;class&gt;&gt;
+ InputNode : &lt;&lt;class&gt;&gt;
+ OutputNode : &lt;&lt;class&gt;
+ BinOpNode : &lt;&lt;class&gt;&gt;
+ RefNode : &lt;&lt;class&gt;&gt;
+ LiteralNode : &lt;&lt;class&gt;&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>890</x><y>270</y><w>210</w><h>90</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
ParseNode
--
+ print( prefix : String ) : void
+ evaluate( ) : Object
+ generate( ) : String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>520</x><y>440</y><w>100</w><h>30</h></coordinates><panel_attributes>/StatementNode/
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>320</y><w>310</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;implements&gt;&gt;</panel_attributes><additional_attributes>290;10;10;120</additional_attributes></element><element><id>UMLClass</id><coordinates><x>860</x><y>20</y><w>290</w><h>110</h></coordinates><panel_attributes>StatementListNode
--
- statements : ArrayList&lt;StatementNode&gt;
--
+ StatementListNode( )
+ StatementListNode( statement : StatementNode)
+ add( statement : StatementNode ) : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>250</x><y>460</y><w>310</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;extends&gt;&gt;</panel_attributes><additional_attributes>290;10;10;160</additional_attributes></element><element><id>Relation</id><coordinates><x>980</x><y>120</y><w>100</w><h>170</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;implements&gt;&gt;</panel_attributes><additional_attributes>10;150;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1202</x><y>160</y><w>260</w><h>70</h></coordinates><panel_attributes>ProgramNode
--
- slist : StatementListNode
--
+ ProgramNode(slist : StatementListNode)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>210</y><w>130</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;implements&gt;&gt;</panel_attributes><additional_attributes>10;60;110;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1137</x><y>70</y><w>90</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>70;100;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>200</x><y>620</y><w>270</w><h>80</h></coordinates><panel_attributes>ArrayDeclNode
--
- name : String
- size : Integer
--
+ ArrayDeclNode(name : String, size : Integer)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>537</x><y>120</y><w>340</w><h>340</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>320;10;10;320</additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>730</y><w>340</w><h>80</h></coordinates><panel_attributes>WhileNode
--
- condition : RefNode
- body : StatementListNode
--
+ WhileNode(condition : RefNode, body: StatementListNode)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>510</x><y>460</y><w>110</w><h>290</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;extends&gt;&gt;</panel_attributes><additional_attributes>60;10;10;270</additional_attributes></element><element><id>UMLClass</id><coordinates><x>710</x><y>730</y><w>270</w><h>80</h></coordinates><panel_attributes>InputNode
--
- ref : RefNode
--
+ InputNode(ref : RefNode)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>460</y><w>200</w><h>290</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;extends&gt;&gt;</panel_attributes><additional_attributes>10;10;180;270</additional_attributes></element><element><id>UMLClass</id><coordinates><x>790</x><y>630</y><w>270</w><h>80</h></coordinates><panel_attributes>OutputNode
--
- ref : OutputNode
--
+ OutputNode(ref : RefNode)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>610</x><y>450</y><w>200</w><h>200</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;extends&gt;&gt;</panel_attributes><additional_attributes>10;10;180;180</additional_attributes></element><element><id>UMLClass</id><coordinates><x>120</x><y>380</y><w>270</w><h>80</h></coordinates><panel_attributes>AssignNode
--
- v : RefNode 
- expr : ParseNode
--
+ AssignNode( v : RefNode, expr : ParseNode )
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>380</x><y>420</y><w>160</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;extends&gt;&gt;</panel_attributes><additional_attributes>140;40;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>810</x><y>450</y><w>360</w><h>100</h></coordinates><panel_attributes>BinOpNode
--
- left : ParseNode
- op : String
- right : ParseNode
--
+ BinOpNode( left : ParseNode, op : String, right : ParseNode )
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1265</x><y>470</y><w>270</w><h>110</h></coordinates><panel_attributes>RefNode
--
- name : String
- expr : ParseNode
--
+ RefNode( name : String, expr : ParseNode )
+ set( value : Integer )  : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1300</x><y>280</y><w>200</w><h>80</h></coordinates><panel_attributes>LiteralNode
--
- val : Integer
--
+ LiteralNode( val : Integer)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>970</x><y>350</y><w>100</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;implements&gt;&gt;</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1080</x><y>350</y><w>280</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;implements&gt;&gt;</panel_attributes><additional_attributes>10;10;260;120</additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>300</y><w>230</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;implements&gt;&gt;</panel_attributes><additional_attributes>10;20;210;20</additional_attributes></element></diagram>